
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  name: virtualservices.networking.istio.io
spec:
  group: networking.istio.io
  names:
    kind: VirtualService
    listKind: VirtualServiceList
    plural: virtualservices
    singular: virtualservice
  scope: ""
  validation:
    openAPIV3Schema:
      description: VirtualService
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: "VirtualServiceSpec defines a set of traffic routing rules
            to apply when a host is addressed. Each routing rule defines matching
            criteria for traffic of a specific protocol. If the traffic is matched,
            then it is sent to a named destination service (or subset/version of it)
            defined in the registry. \n The source of traffic can also be matched
            in a routing rule. This allows routing to be customized for specific client
            contexts. \n The following example on Kubernetes, routes all HTTP traffic
            by default to pods of the reviews service with label \"version: v1\".
            In addition, HTTP requests with path starting with /wpcatalog/ or /consumercatalog/
            will be rewritten to /newcatalog and sent to pods with label \"version:
            v2\". \n ```yaml apiVersion: networking.istio.io/v1alpha3 kind: VirtualService
            metadata:   name: reviews-route spec:   hosts:   - reviews.prod.svc.cluster.local
            \  http:   - match:     - uri:         prefix: \"/wpcatalog\"     - uri:
            \        prefix: \"/consumercatalog\"     rewrite:       uri: \"/newcatalog\"
            \    route:     - destination:         host: reviews.prod.svc.cluster.local
            \        subset: v2   - route:     - destination:         host: reviews.prod.svc.cluster.local
            \        subset: v1 ``` \n A subset/version of a route destination is
            identified with a reference to a named service subset which must be declared
            in a corresponding `DestinationRule`. \n ```yaml apiVersion: networking.istio.io/v1alpha3
            kind: DestinationRule metadata:   name: reviews-destination spec:   host:
            reviews.prod.svc.cluster.local   subsets:   - name: v1     labels:       version:
            v1   - name: v2     labels:       version: v2 ```"
          properties:
            gateways:
              description: The names of gateways and sidecars that should apply these
                routes. A single VirtualService is used for sidecars inside the mesh
                as well as for one or more gateways. The selection condition imposed
                by this field can be overridden using the source field in the match
                conditions of protocol-specific routes. The reserved word `mesh` is
                used to imply all the sidecars in the mesh. When this field is omitted,
                the default gateway (`mesh`) will be used, which would apply the rule
                to all sidecars in the mesh. If a list of gateway names is provided,
                the rules will apply only to the gateways. To apply the rules to both
                gateways and sidecars, specify `mesh` as one of the gateway names.
              items:
                type: string
              type: array
            hosts:
              description: "REQUIRED. The destination hosts to which traffic is being
                sent. Could be a DNS name with wildcard prefix or an IP address.  Depending
                on the platform, short-names can also be used instead of a FQDN (i.e.
                has no dots in the name). In such a scenario, the FQDN of the host
                would be derived based on the underlying platform. \n **A host name
                can be defined by only one VirtualService**. A single VirtualService
                can be used to describe traffic properties for multiple HTTP and TCP
                ports. \n *Note for Kubernetes users*: When short names are used (e.g.
                \"reviews\" instead of \"reviews.default.svc.cluster.local\"), Istio
                will interpret the short name based on the namespace of the rule,
                not the service. A rule in the \"default\" namespace containing a
                host \"reviews will be interpreted as \"reviews.default.svc.cluster.local\",
                irrespective of the actual namespace associated with the reviews service.
                _To avoid potential misconfigurations, it is recommended to always
                use fully qualified domain names over short names._ \n The hosts field
                applies to both HTTP and TCP services. Service inside the mesh, i.e.,
                those found in the service registry, must always be referred to using
                their alphanumeric names. IP addresses are allowed only for services
                defined via the Gateway."
              items:
                type: string
              type: array
            http:
              description: An ordered list of route rules for HTTP traffic. HTTP routes
                will be applied to platform service ports named 'http-*'/'http2-*'/'grpc-*',
                gateway ports with protocol HTTP/HTTP2/GRPC/ TLS-terminated-HTTPS
                and service entry ports using HTTP/HTTP2/GRPC protocols.  The first
                rule matching an incoming request is used.
              items:
                description: Describes match conditions and actions for routing HTTP/1.1,
                  HTTP2, and gRPC traffic. See VirtualService for usage examples.
                properties:
                  corsPolicy:
                    description: Cross-Origin Resource Sharing policy (CORS). Refer
                      to https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS for
                      further details about cross origin resource sharing.
                    properties:
                      allowCredentials:
                        description: Indicates whether the caller is allowed to send
                          the actual request (not the preflight) using credentials.
                          Translates to Access-Control-Allow-Credentials header.
                        type: boolean
                      allowHeaders:
                        description: List of HTTP headers that can be used when requesting
                          the resource. Serialized to Access-Control-Allow-Methods
                          header.
                        items:
                          type: string
                        type: array
                      allowMethods:
                        description: List of HTTP methods allowed to access the resource.
                          The content will be serialized into the Access-Control-Allow-Methods
                          header.
                        items:
                          type: string
                        type: array
                      allowOrigin:
                        description: The list of origins that are allowed to perform
                          CORS requests. The content will be serialized into the Access-Control-Allow-Origin
                          header. Wildcard * will allow all origins.
                        items:
                          type: string
                        type: array
                      exposeHeaders:
                        description: A white list of HTTP headers that the browsers
                          are allowed to access. Serialized into Access-Control-Expose-Headers
                          header.
                        items:
                          type: string
                        type: array
                      maxAge:
                        description: Specifies how long the the results of a preflight
                          request can be cached. Translates to the Access-Control-Max-Age
                          header.
                        type: string
                    type: object
                  fault:
                    description: Fault injection policy to apply on HTTP traffic.
                    properties:
                      abort:
                        description: Abort Http request attempts and return error
                          codes back to downstream service, giving the impression
                          that the upstream service is faulty.
                        properties:
                          httpStatus:
                            description: REQUIRED. HTTP status code to use to abort
                              the Http request.
                            type: integer
                          percent:
                            description: Percentage of requests to be aborted with
                              the error code provided (0-100).
                            type: integer
                        required:
                        - httpStatus
                        type: object
                      delay:
                        description: Delay requests before forwarding, emulating various
                          failures such as network issues, overloaded upstream service,
                          etc.
                        properties:
                          exponentialDelay:
                            description: (-- Add a delay (based on an exponential
                              function) before forwarding the request. mean delay
                              needed to derive the exponential delay values --)
                            type: string
                          fixedDelay:
                            description: 'REQUIRED. Add a fixed delay before forwarding
                              the request. Format: 1h/1m/1s/1ms. MUST be >=1ms.'
                            type: string
                          percent:
                            description: Percentage of requests on which the delay
                              will be injected (0-100).
                            type: integer
                        required:
                        - fixedDelay
                        type: object
                    type: object
                  headers:
                    description: Header manipulation rules
                    properties:
                      request:
                        description: Header manipulation rules to apply before forwarding
                          a request to the destination service
                        properties:
                          add:
                            additionalProperties:
                              type: string
                            description: Append the given values to the headers specified
                              by keys (will create a comma-separated list of values)
                            type: object
                          remove:
                            description: Remove the specified headers
                            items:
                              type: string
                            type: array
                          set:
                            additionalProperties:
                              type: string
                            description: Overwrite the headers specified by key with
                              the given values
                            type: object
                        type: object
                      response:
                        description: Header manipulation rules to apply before returning
                          a response to the caller
                        properties:
                          add:
                            additionalProperties:
                              type: string
                            description: Append the given values to the headers specified
                              by keys (will create a comma-separated list of values)
                            type: object
                          remove:
                            description: Remove the specified headers
                            items:
                              type: string
                            type: array
                          set:
                            additionalProperties:
                              type: string
                            description: Overwrite the headers specified by key with
                              the given values
                            type: object
                        type: object
                    type: object
                  match:
                    description: Match conditions to be satisfied for the rule to
                      be activated. All conditions inside a single match block have
                      AND semantics, while the list of match blocks have OR semantics.
                      The rule is matched if any one of the match blocks succeed.
                    items:
                      description: "HttpMatchRequest specifies a set of criterion
                        to be met in order for the rule to be applied to the HTTP
                        request. For example, the following restricts the rule to
                        match only requests where the URL path starts with /ratings/v2/
                        and the request contains a \"cookie\" with value \"user=jason\".
                        \n     apiVersion: networking.istio.io/v1alpha3     kind:
                        VirtualService     metadata:       name: ratings-route     spec:
                        \      hosts:       - ratings       http:       - match:         -
                        headers:             cookie:               regex: \"^(.*?;)?(user=jason)(;.*)?\"
                        \            uri:               prefix: \"/ratings/v2/\"         route:
                        \        - destination:             host: ratings \n HTTPMatchRequest
                        CANNOT be empty."
                      properties:
                        authority:
                          description: "HTTP Authority values are case-sensitive and
                            formatted as follows: \n - `exact: \"value\"` for exact
                            string match \n - `prefix: \"value\"` for prefix-based
                            match \n - `regex: \"value\"` for ECMAscript style regex-based
                            match"
                          properties:
                            exact:
                              description: exact string match
                              type: string
                            prefix:
                              description: prefix-based match
                              type: string
                            regex:
                              description: ECMAscript style regex-based match
                              type: string
                            suffix:
                              description: suffix-based match.
                              type: string
                          type: object
                        gateways:
                          description: Names of gateways where the rule should be
                            applied to. Gateway names at the top of the VirtualService
                            (if any) are overridden. The gateway match is independent
                            of sourceLabels.
                          items:
                            type: string
                          type: array
                        headers:
                          additionalProperties:
                            description: Describes how to match a given string in
                              HTTP headers. Match is case-sensitive.
                            properties:
                              exact:
                                description: exact string match
                                type: string
                              prefix:
                                description: prefix-based match
                                type: string
                              regex:
                                description: ECMAscript style regex-based match
                                type: string
                              suffix:
                                description: suffix-based match.
                                type: string
                            type: object
                          description: "The header keys must be lowercase and use
                            hyphen as the separator, e.g. _x-request-id_. \n Header
                            values are case-sensitive and formatted as follows: \n
                            - `exact: \"value\"` for exact string match \n - `prefix:
                            \"value\"` for prefix-based match \n - `regex: \"value\"`
                            for ECMAscript style regex-based match \n **Note:** The
                            keys `uri`, `scheme`, `method`, and `authority` will be
                            ignored."
                          type: object
                        method:
                          description: "HTTP Method values are case-sensitive and
                            formatted as follows: \n - `exact: \"value\"` for exact
                            string match \n - `prefix: \"value\"` for prefix-based
                            match \n - `regex: \"value\"` for ECMAscript style regex-based
                            match"
                          properties:
                            exact:
                              description: exact string match
                              type: string
                            prefix:
                              description: prefix-based match
                              type: string
                            regex:
                              description: ECMAscript style regex-based match
                              type: string
                            suffix:
                              description: suffix-based match.
                              type: string
                          type: object
                        port:
                          description: Specifies the ports on the host that is being
                            addressed. Many services only expose a single port or
                            label ports with the protocols they support, in these
                            cases it is not required to explicitly select the port.
                          format: int32
                          type: integer
                        scheme:
                          description: "URI Scheme values are case-sensitive and formatted
                            as follows: \n - `exact: \"value\"` for exact string match
                            \n - `prefix: \"value\"` for prefix-based match \n - `regex:
                            \"value\"` for ECMAscript style regex-based match"
                          properties:
                            exact:
                              description: exact string match
                              type: string
                            prefix:
                              description: prefix-based match
                              type: string
                            regex:
                              description: ECMAscript style regex-based match
                              type: string
                            suffix:
                              description: suffix-based match.
                              type: string
                          type: object
                        sourceLabels:
                          additionalProperties:
                            type: string
                          description: One or more labels that constrain the applicability
                            of a rule to workloads with the given labels. If the VirtualService
                            has a list of gateways specified at the top, it should
                            include the reserved gateway `mesh` in order for this
                            field to be applicable.
                          type: object
                        uri:
                          description: "URI to match values are case-sensitive and
                            formatted as follows: \n - `exact: \"value\"` for exact
                            string match \n - `prefix: \"value\"` for prefix-based
                            match \n - `regex: \"value\"` for ECMAscript style regex-based
                            match"
                          properties:
                            exact:
                              description: exact string match
                              type: string
                            prefix:
                              description: prefix-based match
                              type: string
                            regex:
                              description: ECMAscript style regex-based match
                              type: string
                            suffix:
                              description: suffix-based match.
                              type: string
                          type: object
                      type: object
                    type: array
                  mirror:
                    description: Mirror HTTP traffic to a another destination in addition
                      to forwarding the requests to the intended destination. Mirrored
                      traffic is on a best effort basis where the sidecar/gateway
                      will not wait for the mirrored cluster to respond before returning
                      the response from the original destination.  Statistics will
                      be generated for the mirrored destination.
                    properties:
                      host:
                        description: "REQUIRED. The name of a service from the service
                          registry. Service names are looked up from the platform's
                          service registry (e.g., Kubernetes services, Consul services,
                          etc.) and from the hosts declared by [ServiceEntry](#ServiceEntry).
                          Traffic forwarded to destinations that are not found in
                          either of the two, will be dropped. \n *Note for Kubernetes
                          users*: When short names are used (e.g. \"reviews\" instead
                          of \"reviews.default.svc.cluster.local\"), Istio will interpret
                          the short name based on the namespace of the rule, not the
                          service. A rule in the \"default\" namespace containing
                          a host \"reviews will be interpreted as \"reviews.default.svc.cluster.local\",
                          irrespective of the actual namespace associated with the
                          reviews service. _To avoid potential misconfigurations,
                          it is recommended to always use fully qualified domain names
                          over short names._"
                        type: string
                      port:
                        description: Specifies the port on the host that is being
                          addressed. If a service exposes only a single port it is
                          not required to explicitly select the port.
                        properties:
                          name:
                            description: Valid port name
                            type: string
                          number:
                            description: Valid port number
                            format: int32
                            type: integer
                        type: object
                      subset:
                        description: The name of a subset within the service. Applicable
                          only to services within the mesh. The subset must be defined
                          in a corresponding DestinationRule.
                        type: string
                    required:
                    - host
                    type: object
                  redirect:
                    description: A http rule can either redirect or forward (default)
                      traffic. If traffic passthrough option is specified in the rule,
                      route/redirect will be ignored. The redirect primitive can be
                      used to send a HTTP 302 redirect to a different URI or Authority.
                    properties:
                      authority:
                        description: On a redirect, overwrite the Authority/Host portion
                          of the URL with this value.
                        type: string
                      uri:
                        description: On a redirect, overwrite the Path portion of
                          the URL with this value. Note that the entire path will
                          be replaced, irrespective of the request URI being matched
                          as an exact path or prefix.
                        type: string
                    type: object
                  retries:
                    description: Retry policy for HTTP requests.
                    properties:
                      attempts:
                        description: REQUIRED. Number of retries for a given request.
                          The interval between retries will be determined automatically
                          (25ms+). Actual number of retries attempted depends on the
                          httpReqTimeout.
                        type: integer
                      perTryTimeout:
                        description: 'Timeout per retry attempt for a given request.
                          format: 1h/1m/1s/1ms. MUST BE >=1ms.'
                        type: string
                      retryOn:
                        description: Specifies the conditions under which retry takes
                          place. One or more policies can be specified using a ‘,’
                          delimited list. The supported policies can be found in <https://www.envoyproxy.io/docs/envoy/latest/configuration/http_filters/router_filter#x-envoy-retry-on>
                          and <https://www.envoyproxy.io/docs/envoy/latest/configuration/http_filters/router_filter#x-envoy-retry-grpc-on>
                        type: string
                    type: object
                  rewrite:
                    description: Rewrite HTTP URIs and Authority headers. Rewrite
                      cannot be used with Redirect primitive. Rewrite will be performed
                      before forwarding.
                    properties:
                      authority:
                        description: rewrite the Authority/Host header with this value.
                        type: string
                      uri:
                        description: rewrite the path (or the prefix) portion of the
                          URI with this value. If the original URI was matched based
                          on prefix, the value provided in this field will replace
                          the corresponding matched prefix.
                        type: string
                    type: object
                  route:
                    description: A http rule can either redirect or forward (default)
                      traffic. The forwarding target can be one of several versions
                      of a service (see glossary in beginning of document). Weights
                      associated with the service version determine the proportion
                      of traffic it receives.
                    items:
                      properties:
                        destination:
                          description: REQUIRED. Destination uniquely identifies the
                            instances of a service to which the request/connection
                            should be forwarded to.
                          properties:
                            host:
                              description: "REQUIRED. The name of a service from the
                                service registry. Service names are looked up from
                                the platform's service registry (e.g., Kubernetes
                                services, Consul services, etc.) and from the hosts
                                declared by [ServiceEntry](#ServiceEntry). Traffic
                                forwarded to destinations that are not found in either
                                of the two, will be dropped. \n *Note for Kubernetes
                                users*: When short names are used (e.g. \"reviews\"
                                instead of \"reviews.default.svc.cluster.local\"),
                                Istio will interpret the short name based on the namespace
                                of the rule, not the service. A rule in the \"default\"
                                namespace containing a host \"reviews will be interpreted
                                as \"reviews.default.svc.cluster.local\", irrespective
                                of the actual namespace associated with the reviews
                                service. _To avoid potential misconfigurations, it
                                is recommended to always use fully qualified domain
                                names over short names._"
                              type: string
                            port:
                              description: Specifies the port on the host that is
                                being addressed. If a service exposes only a single
                                port it is not required to explicitly select the port.
                              properties:
                                name:
                                  description: Valid port name
                                  type: string
                                number:
                                  description: Valid port number
                                  format: int32
                                  type: integer
                              type: object
                            subset:
                              description: The name of a subset within the service.
                                Applicable only to services within the mesh. The subset
                                must be defined in a corresponding DestinationRule.
                              type: string
                          required:
                          - host
                          type: object
                        weight:
                          description: REQUIRED. The proportion of traffic to be forwarded
                            to the service version. (0-100). Sum of weights across
                            destinations SHOULD BE == 100. If there is only destination
                            in a rule, the weight value is assumed to be 100.
                          type: integer
                      required:
                      - destination
                      - weight
                      type: object
                    type: array
                  timeout:
                    description: Timeout for HTTP requests.
                    type: string
                type: object
              type: array
            tcp:
              description: An ordered list of route rules for opaque TCP traffic.
                TCP routes will be applied to any port that is not a HTTP or TLS port.
                The first rule matching an incoming request is used.
              items:
                description: "Describes match conditions and actions for routing TCP
                  traffic. The following routing rule forwards traffic arriving at
                  port 27017 for mongo.prod.svc.cluster.local from 172.17.16.* subnet
                  to another Mongo server on port 5555. \n ```yaml apiVersion: networking.istio.io/v1alpha3
                  kind: VirtualService metadata:   name: bookinfo-Mongo spec:   hosts:
                  \  - mongo.prod.svc.cluster.local   tcp:   - match:     - port:
                  27017       sourceSubnet: \"172.17.16.0/24\"     route:     - destination:
                  \        host: mongo.backup.svc.cluster.local         port:           number:
                  5555 ```"
                properties:
                  match:
                    description: Match conditions to be satisfied for the rule to
                      be activated. All conditions inside a single match block have
                      AND semantics, while the list of match blocks have OR semantics.
                      The rule is matched if any one of the match blocks succeed.
                    items:
                      description: L4 connection match attributes. Note that L4 connection
                        matching support is incomplete.
                      properties:
                        destinationSubnet:
                          description: IPv4 or IPv6 ip address of destination with
                            optional subnet.  E.g., a.b.c.d/xx form or just a.b.c.d.
                            This is only valid when the destination service has several
                            IPs and the application explicitly specifies a particular
                            IP.
                          type: string
                        gateways:
                          description: Names of gateways where the rule should be
                            applied to. Gateway names at the top of the VirtualService
                            (if any) are overridden. The gateway match is independent
                            of sourceLabels.
                          items:
                            type: string
                          type: array
                        port:
                          description: Specifies the port on the host that is being
                            addressed. Many services only expose a single port or
                            label ports with the protocols they support, in these
                            cases it is not required to explicitly select the port.
                          type: integer
                        sourceLabel:
                          additionalProperties:
                            type: string
                          description: One or more labels that constrain the applicability
                            of a rule to workloads with the given labels. If the VirtualService
                            has a list of gateways specified at the top, it should
                            include the reserved gateway `mesh` in order for this
                            field to be applicable.
                          type: object
                        sourceSubnet:
                          description: IPv4 or IPv6 ip address of source with optional
                            subnet. E.g., a.b.c.d/xx form or just a.b.c.d
                          type: string
                      type: object
                    type: array
                  route:
                    description: The destination to which the connection should be
                      forwarded to. Currently, only one destination is allowed for
                      TCP services. When TCP weighted routing support is introduced
                      in Envoy, multiple destinations with weights can be specified.
                    properties:
                      destination:
                        description: REQUIRED. Destination uniquely identifies the
                          instances of a service to which the request/connection should
                          be forwarded to.
                        properties:
                          host:
                            description: "REQUIRED. The name of a service from the
                              service registry. Service names are looked up from the
                              platform's service registry (e.g., Kubernetes services,
                              Consul services, etc.) and from the hosts declared by
                              [ServiceEntry](#ServiceEntry). Traffic forwarded to
                              destinations that are not found in either of the two,
                              will be dropped. \n *Note for Kubernetes users*: When
                              short names are used (e.g. \"reviews\" instead of \"reviews.default.svc.cluster.local\"),
                              Istio will interpret the short name based on the namespace
                              of the rule, not the service. A rule in the \"default\"
                              namespace containing a host \"reviews will be interpreted
                              as \"reviews.default.svc.cluster.local\", irrespective
                              of the actual namespace associated with the reviews
                              service. _To avoid potential misconfigurations, it is
                              recommended to always use fully qualified domain names
                              over short names._"
                            type: string
                          port:
                            description: Specifies the port on the host that is being
                              addressed. If a service exposes only a single port it
                              is not required to explicitly select the port.
                            properties:
                              name:
                                description: Valid port name
                                type: string
                              number:
                                description: Valid port number
                                format: int32
                                type: integer
                            type: object
                          subset:
                            description: The name of a subset within the service.
                              Applicable only to services within the mesh. The subset
                              must be defined in a corresponding DestinationRule.
                            type: string
                        required:
                        - host
                        type: object
                      weight:
                        description: REQUIRED. The proportion of traffic to be forwarded
                          to the service version. (0-100). Sum of weights across destinations
                          SHOULD BE == 100. If there is only destination in a rule,
                          the weight value is assumed to be 100.
                        type: integer
                    required:
                    - destination
                    - weight
                    type: object
                required:
                - route
                type: object
              type: array
          required:
          - hosts
          type: object
      required:
      - spec
      type: object
  version: v1alpha3
  versions:
  - name: v1alpha3
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
