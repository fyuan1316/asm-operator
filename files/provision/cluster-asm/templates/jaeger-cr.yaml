apiVersion: "jaegertracing.io/v1"
kind: Jaeger
metadata:
  name: jaeger-prod
  namespace: {{ .Values.istio.namespace }}
  labels:
    heritage: {{ $.Release.Service }}
    release: {{ $.Release.Name }}
spec:
  strategy: {{ .Values.jaeger.strategy }}
  collector:
    image: "{{ template "collector.image" . }}"
    replicas: {{ .Values.jaeger.collector.replicas }}
{{- if eq .Values.jaeger.strategy "streaming" }}
    options:
      kafka:
        producer:
          authentication: {{ .Values.jaeger.kafka.authentication }}
          brokers: {{ .Values.jaeger.kafka.brokers }}
          plaintext:
            password: {{ .Values.jaeger.kafka.plaintext.password }}
            username: {{ .Values.jaeger.kafka.plaintext.username }}
          topic: "{{ .Values.jaeger.elasticsearch.indexprefix }}-{{ .Values.jaeger.kafka.topic }}"
{{- end }}
  ingress:
    enabled: {{ .Values.jaeger.ingress.enabled }}
  agent:
    image: "{{ template "agent.image" . }}"
  query:
    image: "{{ template "query.image" . }}"
    replicas: {{ .Values.jaeger.query.replicas }}
    options:
      query:
        base-path: {{ .Values.jaeger.query.basepath }}
{{- if eq .Values.jaeger.strategy "streaming" }}
  ingester:
    image: "{{ template "ingester.image" . }}"
    replicas: {{ .Values.jaeger.ingester.replicas }}
    options:
      ingester:
        deadlockInterval: {{ .Values.jaeger.ingester.options.ingester.deadlockInterval }}
      kafka:
        consumer:
          authentication: {{ .Values.jaeger.kafka.authentication }}
          brokers: {{ .Values.jaeger.kafka.brokers }}
          plaintext:
            password: {{ .Values.jaeger.kafka.plaintext.password }}
            username: {{ .Values.jaeger.kafka.plaintext.username }}
          topic: "{{ .Values.jaeger.elasticsearch.indexprefix }}-{{ .Values.jaeger.kafka.topic }}"
    resources:
      limits:
        cpu: {{ .Values.jaeger.ingester.resources.limits.cpu }}
        memory: {{ .Values.jaeger.ingester.resources.limits.memory }}
      requests:
        cpu: {{ .Values.jaeger.ingester.resources.requests.cpu }}
        memory: {{ .Values.jaeger.ingester.resources.requests.memory }}
{{- end }}
  storage:
    type: elasticsearch
    options:
      es.index-prefix: "{{ .Values.jaeger.elasticsearch.indexprefix }}"
      es.server-urls: "{{ .Values.jaeger.elasticsearch.serverurl }}"
{{ if .Values.jaeger.elasticsearch.username }}
      es.username: {{ .Values.jaeger.elasticsearch.username }}
{{ end }}
{{ if .Values.jaeger.elasticsearch.password }}
      es.password: {{ .Values.jaeger.elasticsearch.password }}
{{ end }}
      es.tls.enabled: {{ .Values.jaeger.elasticsearch.tls.enabled }}
      es.tls.skip-host-verify: {{ .Values.jaeger.elasticsearch.tls.skip_host_verify }}
    esIndexCleaner:
      image: "{{ template "es_index_cleaner.image" .}}"
      numberOfDays: {{ .Values.jaeger.elasticsearch.indexRetainsDays }}
    dependencies:
      enabled: false
  labels:
    asm.{{ .Values.global.labelBaseDomain }}/healthcheck-component: "true"
    service_name: jaeger
    {{ .Values.global.labelBaseDomain }}/product: "Service-Mesh"
  resources:
{{- if .Values.jaeger.resources }}
{{ toYaml .Values.jaeger.resources | indent 4 }}
{{- end }}
