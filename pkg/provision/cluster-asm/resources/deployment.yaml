kind: Deployment
apiVersion: apps/v1
metadata:
  name: asm-controller
  namespace: {{ $.Release.Namespace }}
  labels:
    app: asm-controller
    version: v1
    heritage: {{ $.Release.Service }}
    release: {{ $.Release.Name }}
    service_name: asm-controller
spec:
  replicas: {{ .Values.asm_controller.replicaCount }}
  selector:
    matchLabels:
      app: asm-controller
      version: v1
  template:
    metadata:
      labels:
        app: asm-controller
        version: v1
        asm.{{ .Values.global.labelBaseDomain }}/healthcheck-component: "true"
        service_name: asm-controller
        {{ .Values.global.labelBaseDomain }}/product: "Service-Mesh"
    spec:
      #affinity:

      containers:
        - name: manager
          image: "{{ .Values.global.registry.address }}/{{ .Values.global.images.asm_controller.repository }}:{{ .Values.global.images.asm_controller.tag }}"
          imagePullPolicy: {{ .Values.asm_controller.imagepullPolicy }}
          env:
          - name: ASM_ISTIO_NAMESPACE
            value: "{{ .Values.istio.namespace }}"
          - name: LABEL_BASE_DOMAIN
            value: "{{ .Values.global.labelBaseDomain }}"
          - name: UPDATE_RANDOM
            value: "{{ randAlphaNum 5 | lower }}"
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          resources:
            limits:
              cpu: 200m
              memory: 300Mi
            requests:
              cpu: 100m
              memory: 200Mi
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8443
              name: webhook
              protocol: TCP
      serviceAccountName: servicemesh-controller
      serviceAccount: servicemesh-controller
{{- if .Values.global.imagePullSecrets }}
      imagePullSecrets:
{{- range .Values.global.imagePullSecrets }}
        - name: {{ . }}
{{- end }}
{{- end }}
